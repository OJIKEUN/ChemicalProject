@model IEnumerable<ChemicalProject.Models.ActualRecord>

@{
    ViewData["Title"] = "Actual Records";
}
<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Chemical_FALab")">Chemical</a></li>
    <li class="breadcrumb-item active">Actual Records</li>
</ol>

@Html.AntiForgeryToken() <!-- Tambahkan ini untuk Anti-Forgery Token -->

<div class="row gutters">
    <div class="card">
        <div class="card-body">
            <div class="card">
                <ul class="nav nav-pills nav-fill shadow">
                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Records_FALab" asp-action="Index" asp-route-id="@ViewBag.ChemicalId">Record</a>
                    </li>
                    @* <li class="nav-item">
                        <a class="nav-link" asp-controller="Waste_FALab" asp-action="Index" asp-route-chemicalId="@ViewBag.ChemicalId">Waste</a>
                    </li> *@
                    <li class="nav-item">
                        <a class="nav-link active" href="#">Actual Record</a>
                    </li>
                </ul>
            </div>
            <p>Current Stock: @ViewBag.CurrentStock</p>
            <hr class="m-0" />

            <div id="toolbar">
                <div class="btn-group me-2">
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserSuperVisor") || User.IsInRole("UserArea"))
                    {
                        <a asp-action="Create" asp-route-chemicalId="@ViewBag.ChemicalId" class="btn btn-primary">Create New</a>
                    }
                </div>
            </div>

            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "ActualRecord")?id=@ViewBag.ChemicalId"
                   data-pagination="true"
                   data-show-export="true"
                   data-export-types="['sql', 'excel', 'pdf']"
                   data-page-size="25">
                <thead>
                    <tr>
                        <th data-field="chemicalName" data-sortable="true" data-width="250">Chemical Name</th>
                        <th data-field="currentStock" data-sortable="true" data-width="200">Current Stock</th>
                        <th data-field="badge" data-sortable="true" data-width="200">Badge</th>
                        <th data-field="description" data-sortable="true">Description</th>
                        <th data-field="date" data-sortable="true" data-width="200">Date</th>
                        <th data-formatter="viewFormatter" data-align="center" data-width="180">Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<input type="hidden" id="isUserAdmin" value="@(((bool)ViewBag.IsUserAdmin).ToString().ToLower())" />
<input type="hidden" id="isUserManager" value="@(((bool)ViewBag.IsUserManager).ToString().ToLower())" />
<input type="hidden" id="isUserArea" value="@(((bool)ViewBag.IsUserArea).ToString().ToLower())" />
<input type="hidden" id="isUserSuperVisor" value="@(((bool)ViewBag.IsUserSupervisor).ToString().ToLower())" />

@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-table@1.22.5/dist/extensions/export/bootstrap-table-export.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.29.0/tableExport.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/tableexport.jquery.plugin@1.29.0/libs/jsPDF/jspdf.umd.min.js"></script>
    <script>
        function viewFormatter(value, row, index) {
            let editButton = '';
            let deleteButton = '';

            const isUserAdmin = document.getElementById('isUserAdmin').value === 'true';
            const isUserManager = document.getElementById('isUserManager').value === 'true';
            const isUserArea = document.getElementById('isUserArea').value === 'true';
            const isUserSuperVisor = document.getElementById('isUserSuperVisor').value === 'true';

            if (isUserAdmin || isUserSuperVisor) {
                editButton = `<a href="@Url.Action("Edit", "ActualRecord")?chemicalId=${row.chemicalId}&id=${row.id}" class="btn btn-info btn-sm shadow">Edit</a>`;
            }

            if (isUserAdmin) {
                deleteButton = `<a href="#" class="btn btn-danger btn-sm shadow" onclick="confirmDelete(${row.id}, ${row.chemicalId})">Delete</a>`;
            }

            return `
                                ${editButton}
                                ${deleteButton}
                            `;
        }

        function confirmDelete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    deleteRecord(id);
                }
            });
        }

        function deleteRecord(id) {
            var form = $('form');
            var token = form.find('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                url: '@Url.Action("DeleteConfirmed", "ActualRecord")',
                type: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    id: id
                },
                success: function (data) {
                    console.log('Success response:', data);
                    if (data.success) {
                        $('#table').bootstrapTable('refresh');
                        Swal.fire("Deleted!", "Your record has been deleted.", "success");
                    } else {
                        Swal.fire("Error!", data.message, "error");
                    }
                },
                error: function (xhr, status, error) {
                    console.log('Error:', error);
                    Swal.fire("Error!", "An error occurred while deleting the record.", "error");
                }
            });
        }

        $(function () {
        @if (TempData["SuccessMessage"] != null)
        {
            @:Swal.fire("Success!", "@TempData["SuccessMessage"]", "success");
        }
            });
    </script>

    <form method="post" style="display:none">
        @Html.AntiForgeryToken()
    </form>
}